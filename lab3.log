Megan Pham
CS 35L 
505 313 300


LABORATORY: Spell-checking Hawaiian



export LC_ALL='C'

sort /usr/share/dict/words > words

wget https://web.cs.ucla.edu/classes/fall20/cs35L/assign/assign3.html

cat assign3.html | tr -c 'A-Za-z' '[\n*]'
This command translates any thing that does not contain lowercase or uppercase
alphabet characters into a new line character. (-c is the complement) 

cat assign3.html | tr -cs 'A-Za-z' '[\n*]'
Compared to the last command, this command added an extra -s, which is the
squeeze command and removes the repeated new line characters, so there
were no double new line characters. As a result, there were not extra
whitespace in the list.

cat assign3.html | tr -cs 'A-Za-z' '[\n*]' | sort
This command sorted the list in alphabetical order.


cat assign3.html | tr -cs 'A-Za-z' '[\n*]' | sort -u
This command sorted the list in alphabetical order and also removed
the duplicate words.

cat assign3.html | tr -cs 'A-Za-z' '[\n*]' | sort -u | comm - words
This command outputted the list in alphabetical order, but also comm
compares the two files (words and the sorted assign3.html file) line by
line and outputs three-columns. The first column shows the lines that
assign3.html that the words file do not have. The second column displays
all the words in the words file that is not in assign.html. The last
column shows words that are in both files.


cat assign3.html | tr -cs 'A-Za-z' '[\n*]' | sort -u | comm -23 - words
# ENGLISHCHECKER
The -2 and -3 takes out columns 2 and 3 in the comm's three column
output, and only outputs column 1, which is all the words in the
assign3.html file that does not match with the words file. 



Hawaiian Checker


wget https://www.mauimapp.com/moolelo/hwnwdshw.htm



step 1: remove all instances of '?', '<u>', and '</u>'
emacs buildwords

cat hwnwdshw.htm | 
sed -E "s/[?]|<u>|<\/\u>//g" | 
tr "[:upper:]" "[:lower:]" | 
tr '`' "'" | 
tr "-" " "| 
grep -E " *<td[^>]*>[pk'mnwlhaeiou ]*</td> *" |
tr -c "pk'mnwlhaeiou" '[\n*]' |
sed -E "s/<[^>]*>//g" | tr -d "[:blank:]" |
 sort -u 


save output to hwords
(cat hwnwdshw.htm | ./buildwords| less) > hwords

I followed the hints on the slides. Since we know that the hawaiian
words are in a very specific form, we can slowly filter the text so
we only get the hawaiian characters. To do this, I first removed ?,
<u>, and <\u>. Then, I changed uppercases to lower cases, the backtick
to a single quote, the dash to a space. I searched for phrases of the
form and then removed all the non-hawaiian character out of the phrase
to get the hawaiian words. 

HAWAIIANCHECKER

cat file | tr "[:upper:]" "[:lower:]" | tr -cs "A-Za-z\'" '[\n*]' |
sort -u | comm -23 - hwords 


We need to run Hawaiian spelling checker on assign3.html and hwords 


(cat assign3.html | tr "[:upper:]" "[:lower:]" | tr -cs "A-Za-z\'" '[\n*]' |
sort -u | comm -23 - hwords) > hmiss.txt
cat hmiss.txt |wc -w

573 words are misspelled on assign3.html using the Hawaiian spell checker.



cat hwords | tr "[:upper:]" "[:lower:]" | tr -cs "A-Za-z\'" '[\n*]' |
sort -u | comm -23 - hwords | wc -w

0 words are misspelled on hwords using the hawaiian spell checker.




Now to run English spelling checker on on assign3.html and hwords

(cat assign3.html | tr "[:upper:]" "[:lower:]" | tr -cs "A-Za-z\'" '[\n*]' |
sort -u | comm -23 - words) > emiss.txt
cat emiss.txt | wc -w

69 words are misspelled on assign3.html using the english spell checker


cat hwords | tr "[:upper:]" "[:lower:]" | tr -cs "A-Za-z\'" '[\n*]' |
sort -u | comm -23 - words | wc -w

216 words are misspelled on hwords using the english spell checker



now count misspelled words that eng reports as misspelled but
hawaiianchecker does not
cat emiss.txt | tr -cs "A-Za-z'" '[\n*]' | sort -u | comm -12 - hwords
> engonly.txt
cat engonly.txt
cat engonly.txt|  wc -w 
Two examples are lau and wiki. (4 words)


count misspelled words that hawaiian checker reports but english
checker doesn't 
cat hmiss.txt | tr "[:upper:]" "[:lower:]"| tr -cs "A-Za-z'" '[\n*]' |
sort -u | comm -12 - words > honly.txt
cat honly.txt
cat honly.txt | wc -w
Two examples include warning and violations. (508 words)


